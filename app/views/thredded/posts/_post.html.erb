<% post, content = post_and_content if local_assigns.key?(:post_and_content) %>
<%= render 'thredded/posts_common/before_first_unread_post', post: post if post.first_unread_in_page? %>
<%= content_tag :article, id: dom_id(post), class: "thredded--post thredded--#{post.read_state}--post" do %>

  <% if  post.user.master %>
    <p class="admin-badge">Admin</p>
  <% end %>

  <%#= link_to 'Like', "/#{messageboard.id}/#{post.id}/likes", method: :post %>
  <%#= link_to 'Like', post_likes_path(post.id), method: :post %>

  <%= link_to 'Like this post', root_path, class: "likes-link", data: { id: "post-#{post.id}"} %>
  <p class="likes-count" data-count="count-<%= post.id %>" ><%= post.likes.count %> <%= (post.likes.count) == 1 ? 'Like' : 'Likes'%></p>

  <%= render 'thredded/posts_common/actions', post: post, actions: local_assigns[:actions] %>
  <%= render 'thredded/posts_common/header', post: post %>
  <%= content || render('thredded/posts/content', post: post) %>
  <% if post.pending_moderation? && !Thredded.content_visible_while_pending_moderation %>
    <p class="thredded--alert thredded--alert-warning"><%= t 'thredded.posts.pending_moderation_notice' %></p>
  <% elsif post.blocked? && post.can_moderate? %>
    <p class="thredded--alert thredded--alert-danger">
      <%= render 'thredded/shared/content_moderation_blocked_state', moderation_record: post.last_moderation_record %>
    </p>
  <% end %>
<% end %>

<!-- Code to unlike a post -->
<%# pre_like = @post.likes.find { |like| like.user_id == current_user.id} %>
<%# if pre_like %>
  <%#= button_to 'Unlike', post_like_path(@post, pre_like), method: :delete %>
<%# else %>
  <%#= button_to 'Like', post_likes_path(@post), method: :post %>
<%# end %>
